<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RootNamespace>XecMe.Core</RootNamespace>
    <AssemblyName>XecMe.Core</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <DelaySign>true</DelaySign>
    <AssemblyOriginatorKeyFile>../Signing/Sign.pfx</AssemblyOriginatorKeyFile>
    <PackageId>XecMe</PackageId>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <Description>XecMe is a hosting and execution framework. It follows the task oriented design approach for solving the business problems. It is a highly configurable framework to execute batch processes, asynchronous tasks, Windows Service etc. You can simplify your Azure Worker Role development to manage multiple task within the same role</Description>
    <Configurations>Debug;Release;Pack</Configurations>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <FileVersion>3.0.0.0</FileVersion>
    <Authors>Shailesh Lolam</Authors>
    <Product>XecMe</Product>
    <RepositoryUrl>https://github.com/slolam/XecMe/</RepositoryUrl>
    <Version>3.0.0</Version>
    <PackageTags>Azure Worker Role WebJobs Task Oriented Parallel Events Threading Timer Scheduler</PackageTags>
    <RepositoryType>GIT</RepositoryType>
    <PackageReleaseNotes>XecMe 3.0.0
      - Package build to support Net Standard 2.0 and .Net Core
      XecMe 2.1.4
      - Fixed the edge case bug in ScheduledTaskRunner if task completes under 1 second runtime

      XecMe 2.1.3 &amp;amp; 2.1.3
      - Fixed the Timer configuration issue
      - Upgraded the SimpleInjector package
      
      XecMe 2.1.0
      - Added new ITaskAsync interface for the async task
      - Fixed some configuration issues

      XecMe 2.0.0
      - Flient API for configuring the tasks
      - Abstracted container into a IContainer interface so that developer use their favorite container
      - Separated Simple Injector container into separate package XecMe.DI.SimpleInjector and Ninject Container into XecMe.DI.Ninject
      - Refactored and optimized
      - All ITask methods are container scoped</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/slolam/XecMe/</PackageProjectUrl>
    <PackageLicenseUrl>https://licenses.nuget.org/MIT</PackageLicenseUrl>
    <NuspecFile>$(AssemblyName).nuspec</NuspecFile>
    <NuspecProperties>id=$(PackageId);version=$(Version)</NuspecProperties>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="RuleEngine\**" />
    <EmbeddedResource Remove="RuleEngine\**" />
    <None Remove="RuleEngine\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="2.2.0" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Common\XecMe.Common.csproj" />
    <ProjectReference Include="..\Configuration\XecMe.Configuration.csproj" />
  </ItemGroup>

</Project>
